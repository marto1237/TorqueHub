# Disable the Gradle daemon for CI servers
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  DOCKER_TLS_CERTDIR: ""
  IMAGE_NAME: "torquehub-api"  # Define your image name

stages:
  - build
  - docker_build
  - test

# Stage for building the Java application using Gradle
build:
  stage: build
  image: gradle:8.0.0-jdk19  # Use a Gradle Docker image
  script:
    - ./gradlew assemble

# Stage for building the Docker image
docker_build:
  stage: docker_build
  image: docker:24.0  # Use the Docker-in-Docker service
  services:
    - docker:24.0-dind  # Docker-in-Docker service
  script:
    - docker build -t $IMAGE_NAME:latest .

# Stage for running tests within a Docker container
test:
  stage: test
  image: docker:24.0
  services:
    - docker:24.0-dind
  script:
    # Create the Docker network if it doesn't exist
    - docker network create torquehub_network || true
    # Run MySQL container for tests
    - docker run --net torquehub_network --name torquehub-db -e MYSQL_DATABASE=torquehubdb -e MYSQL_ROOT_PASSWORD=marto100 -p 3390:3306 -d mysql:8.0
    # Run the API container
    - docker run -d -p 8090:8080 --net torquehub_network --name torquehub-api -e "SPRING_DATASOURCE_URL=jdbc:mysql://torquehub-db:3306/torquehubdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC" -e SPRING_DATASOURCE_USERNAME=root -e SPRING_DATASOURCE_PASSWORD=marto100 -e SPRING_JPA_HIBERNATE_DDL_AUTO=update torquehub-api
    # Verify running containers
    - docker ps
